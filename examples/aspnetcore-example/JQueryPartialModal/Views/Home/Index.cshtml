@model dynamic
@using System.Text.Json
@{
    ViewData["Title"] = "Modal Dialog with jQuery Example";
}

<div class="container-fluid px-3 px-md-4 px-lg-5 py-4">
    <!-- Hero Section -->
    <div class="row mb-4 mb-md-5">
        <div class="col-12">
            <div class="text-center text-md-start">
                <h1 class="display-5 display-md-4 fw-bold text-primary mb-3">
                    Bootstrap Modal with Partial Views
                </h1>
                <p class="lead text-muted">Dynamic modal dialogs made easy with jQuery plugin</p>
            </div>
        </div>
    </div>

    <!-- Programmatic Mode Section -->
    <div class="row mb-4 mb-md-5">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white py-3">
                    <h3 class="h5 mb-0">
                        <i class="bi bi-code-square"></i> Programmatic Mode (JavaScript)
                    </h3>
                </div>
                <div class="card-body p-3 p-md-4">
                    <p class="text-muted mb-3">Full control through JavaScript code</p>
                    <div class="d-grid d-sm-flex gap-2 gap-md-3 flex-wrap">
                        <button id="showUserBtn" class="btn btn-primary btn-lg">
                            <i class="bi bi-person-circle"></i> Show User Details
                        </button>   
                        <button id="showProductBtn" class="btn btn-success btn-lg">
                            <i class="bi bi-plus-circle"></i> Create New Product
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Declarative Mode Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-info text-white py-3">
                    <h3 class="h5 mb-0">
                        <i class="bi bi-tags"></i> Declarative Mode (Data Attributes)
                    </h3>
                </div>
                <div class="card-body p-3 p-md-4">
                    <p class="text-muted mb-3">Configure modals directly through HTML attributes</p>
                    
                    <!-- User Details Examples -->
                    <div class="mb-4">
                        <h6 class="fw-semibold mb-3 text-uppercase text-muted small">
                            <i class="bi bi-person"></i> User Examples
                        </h6>
                        <div class="d-grid d-sm-flex gap-2 gap-md-3 flex-wrap">
                            <!-- Method 1: Global function callback -->
                            <button class="btn btn-info modal-trigger" 
                                    data-modal-url="@Url.Action("UserDetailsPartial", "Home")"
                                    data-modal-method="POST"
                                    data-modal-title="User Profile (Global Callback)"
                                    data-modal-size="modal-lg"
                                    data-modal-data='@(JsonSerializer.Serialize(new UserViewModel  { Id = 222 }))'
                                    data-modal-on-loaded="myUserLoadedCallback">
                                <i class="bi bi-person-badge"></i>
                                <span class="d-none d-sm-inline">User Details 2 (Global Callback)</span>
                                <span class="d-inline d-sm-none">User 2</span>
                            </button>
                            
                            <!-- Method 2: jQuery custom event -->
                            <button id="userBtn3" class="btn btn-secondary modal-trigger" 
                                    data-modal-url="@Url.Action("UserDetailsPartial", "Home")"
                                    data-modal-method="POST"
                                    data-modal-title="User Profile (jQuery Event)"
                                    data-modal-size="modal-lg"
                                    data-modal-data='@(JsonSerializer.Serialize(new UserViewModel  { Id = 333 }))'>
                                <i class="bi bi-person-check"></i>
                                <span class="d-none d-sm-inline">User Details 3 (jQuery Event)</span>
                                <span class="d-inline d-sm-none">User 3</span>
                            </button>
                        </div>
                    </div>

                    <!-- Product Examples -->
                    <div>
                        <h6 class="fw-semibold mb-3 text-uppercase text-muted small">
                            <i class="bi bi-box-seam"></i> Product Examples
                        </h6>
                        <div class="d-grid d-sm-flex gap-2 gap-md-3 flex-wrap">
                            <button class="btn btn-warning modal-trigger" 
                                    data-modal-url="@Url.Action("CreateProductPartial", "Home")"
                                    data-modal-method="GET"
                                    data-modal-title="Create Product (Declarative)"
                                    data-modal-size="modal-md"
                                    data-modal-submit-url="@Url.Action("CreateProduct", "Home")"
                                    data-modal-on-success="onProductCreated"
                                    data-modal-on-error="onProductError">
                                <i class="bi bi-plus-square"></i>
                                <span class="d-none d-sm-inline">Create Product 2 (Callbacks)</span>
                                <span class="d-inline d-sm-none">Product 2</span>
                            </button>
                            
                            <!-- Example with jQuery events instead of global functions -->
                            <button id="productBtn3" class="btn btn-dark modal-trigger" 
                                    data-modal-url="@Url.Action("CreateProductPartial", "Home")"
                                    data-modal-method="GET"
                                    data-modal-title="Create Product (jQuery Events)"
                                    data-modal-size="modal-md"
                                    data-modal-submit-url="@Url.Action("CreateProduct", "Home")">
                                <i class="bi bi-box"></i>
                                <span class="d-none d-sm-inline">Create Product 3 (Events)</span>
                                <span class="d-inline d-sm-none">Product 3</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Feature Cards -->
    <div class="row g-3 g-md-4">
        <div class="col-12 col-md-6 col-lg-4">
            <div class="card h-100 border-primary">
                <div class="card-body">
                    <h5 class="card-title text-primary">
                        <i class="bi bi-lightning-charge"></i> Easy to Use
                    </h5>
                    <p class="card-text small">Integrate dynamic modals with just a few lines of code</p>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4">
            <div class="card h-100 border-success">
                <div class="card-body">
                    <h5 class="card-title text-success">
                        <i class="bi bi-phone"></i> Responsive
                    </h5>
                    <p class="card-text small">Optimized for all devices and screen sizes</p>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-4">
            <div class="card h-100 border-info">
                <div class="card-body">
                    <h5 class="card-title text-info">
                        <i class="bi bi-gear"></i> Flexible
                    </h5>
                    <p class="card-text small">Supports both programmatic and declarative modes</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // ===== Global callback functions for declarative mode =====
        function myUserLoadedCallback(modal) {
            console.log("User loaded via global callback!");
            console.log("Modal element:", modal);
        }

        function onProductCreated(result) {
            console.log("Product created successfully!", result);
            // Custom success handling - show a nicer notification instead of alert
            if (result.message) {
                // You could use a toast notification library here
                console.log("Success message:", result.message);
                alert("✓ " + result.message);
            }
        }

        function onProductError(errorData) {
            console.error("Error occurred:", errorData);
            // Custom error handling
            alert("✗ Error: " + (errorData.message || "An error occurred"));
        }

        $(document).ready(function () {
            // ===== Programmatic Mode =====
            // Load user details partial
            $('#showUserBtn').on('click', function () {
                $(this).loadPartialModal({
                    url: '@Url.Action("UserDetailsPartial", "Home")',
                    method: 'POST',
                    data: { Id: 123 }, // Pass model data to controller
                    title: 'User Profile',
                    size: 'modal-lg',
                    onLoaded: function (modal) {
                        console.log("User partial loaded (programmatic)");
                    }
                });
            });

            // Load product creation partial
            $('#showProductBtn').on('click', function () {
                $(this).loadPartialModal({
                    url: '@Url.Action("CreateProductPartial", "Home")',
                    method: 'GET',
                    title: 'Create Product',
                    size: 'modal-md',
                    onLoaded: function (modal) {
                        console.log("Product form loaded");
                    },
                    onSubmit: function (formData, callback) {
                        // Handle form submission via AJAX
                        $.ajax({
                            url: '@Url.Action("CreateProduct", "Home")',
                            method: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                            dataType: 'json', // Expect JSON by default
                            success: function (result) {
                                // Success response (JSON)
                                callback(result);
                                // Wait for modal to be hidden before showing alert
                                $('#partialModal').one('hidden.bs.modal', function () {
                                    alert(result.message);
                                    // Optional: Refresh parent page data
                                    // location.reload();
                                });
                            },
                            error: function (xhr) {
                                // Check if response is HTML (validation errors)
                                if (xhr.status === 200 && xhr.responseText) {
                                    // Validation errors - response is HTML partial view
                                    callback({ success: false, html: xhr.responseText });
                                } else {
                                    // Actual error
                                    callback({ success: false, message: "Submission failed" });
                                }
                            }
                        });
                    }
                });
            });

            // ===== Declarative Mode =====
            // Initialize all elements with .modal-trigger class
            $('.modal-trigger').loadPartialModal();
            
            // Attach jQuery event handler for button with ID (onLoaded)
            $('#userBtn3').on('loaded.partialModal', function(event, modal) {
                console.log("User loaded via jQuery event!");
                console.log("Modal element:", modal);
                console.log("Button that triggered:", this);
            });
            
            // Attach jQuery event handlers for success and error (alternative to global functions)
            $('#productBtn3')
                .data('hasSuccessHandler', true)  // Mark that we have a custom handler
                .on('success.partialModal', function(event, result) {
                    console.log("Product created via jQuery event!", result);
                    alert("✓ Product created: " + result.message);
                })
                .on('error.partialModal', function(event, errorData) {
                    console.error("Error via jQuery event:", errorData);
                    alert("✗ Error: " + (errorData.message || "An error occurred"));
                });
            
            // You can also attach global event handlers for all modals
            // $(document).on('success.partialModal', '.modal-trigger', function(event, result) {
            //     console.log("Any modal succeeded!", result);
            // });
        });
    </script>
}
